name: Upload to S3 and Deploy CloudFormation

on:
  push:
    branches:
      - main  # Trigger this workflow on pushes to the 'main' branch

jobs:
  upload-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Set up permissions for the upload script
      - name: Set up permissions for the upload script
        run: chmod +x aws/scripts/upload-to-s3.sh

      # Step 4: Upload files to S3
      - name: Upload files to S3
        env:
          S3_BUCKET: stack-vwm-advanced-logistics-analytics-infrastructure
        run: aws/scripts/upload-to-s3.sh

      # Step 5: Deploy or update CloudFormation stack
      - name: Deploy CloudFormation Stack
        run: |
          STACK_NAME="stack-vwm-advanced-logistics-analytics-infrastructure"
          TEMPLATE_URL="https://stack-vwm-advanced-logistics-analytics-infrastructure.s3.amazonaws.com/main.yaml"

          echo "Checking if stack $STACK_NAME exists..."
          if aws cloudformation describe-stacks --stack-name "$STACK_NAME" > /dev/null 2>&1; then
            echo "Stack exists. Updating..."
            aws cloudformation update-stack --stack-name "$STACK_NAME" \
              --template-url "$TEMPLATE_URL" \
              --capabilities CAPABILITY_NAMED_IAM

            echo "Waiting for the stack update to complete..."
            while true; do
              STATUS=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" --query "Stacks[0].StackStatus" --output text)
              if [[ "$STATUS" == "UPDATE_COMPLETE" ]]; then
                echo "Stack updated successfully."
                break
              elif [[ "$STATUS" == "ROLLBACK_COMPLETE" || "$STATUS" == "ROLLBACK_FAILED" ]]; then
                echo "Error: Stack operation failed. Status: $STATUS"
                exit 1
              else
                echo "Current status: $STATUS. Waiting..."
                sleep 30
              fi
            done
          else
            echo "Stack does not exist. Creating..."
            aws cloudformation create-stack --stack-name "$STACK_NAME" \
              --template-url "$TEMPLATE_URL" \
              --capabilities CAPABILITY_NAMED_IAM

            echo "Waiting for the stack creation to complete..."
            while true; do
              STATUS=$(aws cloudformation describe-stacks --stack-name "$STACK_NAME" --query "Stacks[0].StackStatus" --output text)
              if [[ "$STATUS" == "CREATE_COMPLETE" ]]; then
                echo "Stack created successfully."
                break
              elif [[ "$STATUS" == "ROLLBACK_COMPLETE" || "$STATUS" == "ROLLBACK_FAILED" ]]; then
                echo "Error: Stack operation failed. Status: $STATUS"
                exit 1
              else
                echo "Current status: $STATUS. Waiting..."
                sleep 30
              fi
            done
          fi
          echo "Stack operation completed successfully."