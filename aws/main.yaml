AWSTemplateFormatVersion: "2010-09-09"
Description: Root stack 

Parameters:
  BaseTemplateURLParameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/BaseTemplateS3URL
    Description: The base URL for the S3 bucket where the CloudFormation templates are stored

  VPCId:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/VPCId
    Description: The ID of the existing VPC

  ResourcesPrefix:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/ResourcesPrefix
    Description: Prefix used for naming AWS resources and tagging

  DBUsername:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/DBUsername
    Description: The username for the database instance

  DBInstanceClass:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/DBInstanceClass
    Description: The instance class for the database

  DBEngine:
    Type: String
    Default: postgres
    Description: The database engine to use
  
  DBBackupRetentionPeriod:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/DBBackupRetentionPeriod
    Description: Number of days to retain automatic backups

  DBPreferredBackupWindow:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/DBPreferredBackupWindow
    Description: Time window for automated backups (UTC time)

  DBPreferredMaintenanceWindow:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/DBPreferredMaintenanceWindow
    Description: Time window for RDS maintenance (UTC time)

  PrivateSubnets:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/PrivateSubnets
    Description: List of private subnet IDs, separated by commas

  RouteTables:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/RouteTables
    Description: List of route table IDs, separated by commas

  PublicSubnets:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/PublicSubnets
    Description: List of public subnet IDs, separated by commas

  CWLogGroupRetentionInDays:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/CWLogGroupRetentionInDays
    Description: Number of days to retain logs in the CloudWatch LogGroup

  FrontendTargetGroupName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/FrontendTargetGroupName
    Description: The name of the Target Group for the frontend service

  FrontendContainerPort:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/FrontendContainerPort
    Description: The port on which the frontend container listens

  TargetGroupHealthCheckPath:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/TargetGroupHealthCheckPath
    Description: The health check path for the frontend Target Group
  
  FrontendContainerName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/FrontendContainerName
    Description: The name of the frontend container in ECS

  FrontendImageRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/FrontendImageRepository
    Description: ECR image repository for the frontend

  ServiceName:  
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/ServiceName
    Description: Name of the ECS service (e.g., frontend, backend)

  DesiredCount:  
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/DesiredCount
    Description: Number of ECS tasks to run

  BackendTargetGroupName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/BackendTargetGroupName
    Description: The name of the Target Group for the backend service

  BackendContainerPort:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/BackendContainerPort
    Description: The port on which the backend container listens

  BackendContainerName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/BackendContainerName
    Description: The name of the backend container in ECS

  BackendImageRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/BackendImageRepository
    Description: ECR image repository for the backend

  MLImageRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/MLImageRepository
    Description: ECR image repository for the ML model

  HealthCheckImageRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/HealthCheckImageRepository
    Description: ECR image repository for the health check

  BackendServiceName:  
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/BackendServiceName
    Description: Name of the ECS service (e.g., frontend, backend)

  MLTargetGroupName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/MLTargetGroupName
    Description: The name of the Target Group for the ML service
  
  MLContainerPort:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/MLContainerPort
    Description: The port on which the ML container listens

  MLServiceName:  
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/MLServiceName
    Description: Name of the ECS service (e.g., frontend, backend)

  MLContainerName:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/MLContainerName
    Description: The name of the ML container in ECS

  ScheduleExpression:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/ScheduleExpression
    Description: The schedule expression for the EventBridge rule

  FrontendTaskCpu:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/FrontendTaskCpu
    Description: "The number of CPU units used by the frontend task"

  FrontendTaskMemory:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/FrontendTaskMemory
    Description: "The amount of memory (in MiB) used by the frontend task"

  BackendTaskCpu:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/BackendTaskCpu
    Description: "The number of CPU units used by the backend task"

  BackendTaskMemory:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/BackendTaskMemory
    Description: "The amount of memory (in MiB) used by the backend task"

  HealthCheckTaskCpu:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/HealthCheckTaskCpu
    Description: "The number of CPU units used by the health check task"

  HealthCheckTaskMemory:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/HealthCheckTaskMemory
    Description: "The amount of memory (in MiB) used by the health check task"

  MLTaskCpu:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/MLTaskCpu
    Description: "The number of CPU units used by the ML task"

  MLTaskMemory:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /vwm-infrastructure/MLTaskMemory
    Description: "The amount of memory (in MiB) used by the ML task"

Resources:
  SGStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/network/sg.yaml"
      Parameters:
        VPCId: !Ref VPCId
        ResourcesPrefix: !Ref ResourcesPrefix
  EndPointStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/network/endpoints.yaml"
      Parameters:
        VPCId: !Ref VPCId
        PrivateSubnets: !Ref PrivateSubnets
        RouteTables: !Ref RouteTables
        VPCEndpointsSecurityGroup: !GetAtt SGStack.Outputs.VPCEndpointsSecurityGroup
        ResourcesPrefix: !Ref ResourcesPrefix
  RDSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EndPointStack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/database/rds.yaml"
      Parameters:
        ResourcesPrefix: !Ref ResourcesPrefix
        DBUsername: !Ref DBUsername
        DBInstanceClass: !Ref DBInstanceClass
        DBEngine: !Ref DBEngine
        DatabaseSecurityGroup: !GetAtt SGStack.Outputs.DatabaseSecurityGroup
        PrivateSubnets: !Ref PrivateSubnets
        DBBackupRetentionPeriod: !Ref DBBackupRetentionPeriod
        DBPreferredBackupWindow: !Ref DBPreferredBackupWindow
        DBPreferredMaintenanceWindow: !Ref DBPreferredMaintenanceWindow
  ALBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/network/alb.yaml"
      Parameters:
        VPCId: !Ref VPCId
        PublicSubnets: !Ref PublicSubnets
        ALBSecurityGroup: !GetAtt SGStack.Outputs.ALBSecurityGroup
        ResourcesPrefix: !Ref ResourcesPrefix
  ECSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/compute/ecs-cluster.yaml"
      Parameters:
        ResourcesPrefix: !Ref ResourcesPrefix
  RoleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/iam/roles.yaml"
      Parameters:
        ResourcesPrefix: !Ref ResourcesPrefix
        SecretArn: !GetAtt RDSStack.Outputs.SecretArn
  CloudWatchLogGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/logging/cloudwatch-log-group.yaml"
      Parameters:
        ResourcesPrefix: !Ref ResourcesPrefix
        CWLogGroupRetentionInDays: !Ref CWLogGroupRetentionInDays
  FrontendStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EndPointStack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/services/frontend/frontend-main.yaml"
      Parameters:
        VPCId: !Ref VPCId
        ALB: !GetAtt ALBStack.Outputs.ALB
        Subnets: !Ref PublicSubnets
        ResourcesPrefix: !Ref ResourcesPrefix
        TargetGroupName: !Ref FrontendTargetGroupName
        ContainerPort: !Ref FrontendContainerPort
        TargetGroupHealthCheckPath: !Ref TargetGroupHealthCheckPath
        ContainerName: !Ref FrontendContainerName
        ECSCluster: !GetAtt ECSStack.Outputs.ECSCluster
        ECRImageRepository: !Ref FrontendImageRepository
        TaskExecutionRoleARN: !GetAtt RoleStack.Outputs.TaskExecutionRoleARN
        ALBDNSName: !GetAtt ALBStack.Outputs.ALBDNSName
        CloudWatchLogGroupName: !GetAtt CloudWatchLogGroupStack.Outputs.CloudWatchLogGroupName
        SecurityGroup: !GetAtt SGStack.Outputs.FrontendSecurityGroup
        BaseTemplateURLParameter: !Ref BaseTemplateURLParameter
        ServiceName: !Ref ServiceName
        DesiredCount: !Ref DesiredCount
        TaskCpu: !Ref FrontendTaskCpu
        TaskMemory: !Ref FrontendTaskMemory
  BackendStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EndPointStack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/services/backend/backend-main.yaml"
      Parameters:
        VPCId: !Ref VPCId
        ALB: !GetAtt ALBStack.Outputs.ALB
        Subnets: !Ref PrivateSubnets
        SecurityGroup: !GetAtt SGStack.Outputs.BackendSecurityGroup
        ECRImageRepository: !Ref BackendImageRepository
        ResourcesPrefix: !Ref ResourcesPrefix
        TargetGroupName: !Ref BackendTargetGroupName
        ContainerPort: !Ref BackendContainerPort
        TaskExecutionRoleARN: !GetAtt RoleStack.Outputs.TaskExecutionRoleARN
        ECSCluster: !GetAtt ECSStack.Outputs.ECSCluster
        TargetGroupHealthCheckPath: !Ref TargetGroupHealthCheckPath
        ALBDNSName: !GetAtt ALBStack.Outputs.ALBDNSName
        CloudWatchLogGroupName: !GetAtt CloudWatchLogGroupStack.Outputs.CloudWatchLogGroupName
        BaseTemplateURLParameter: !Ref BaseTemplateURLParameter
        ServiceName: !Ref BackendServiceName
        DesiredCount: !Ref DesiredCount
        ContainerName: !Ref BackendContainerName
        RDSInstanceEndpoint: !GetAtt RDSStack.Outputs.RDSInstanceEndpoint
        RDSInstancePort: !GetAtt RDSStack.Outputs.RDSInstancePort
        DBName: !GetAtt RDSStack.Outputs.DBName
        DBSecretArn: !GetAtt RDSStack.Outputs.SecretArn
        TaskCpu: !Ref BackendTaskCpu
        TaskMemory: !Ref BackendTaskMemory
  MLStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EndPointStack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/services/ml/ml-main.yaml"
      Parameters:
        VPCId: !Ref VPCId
        ALB: !GetAtt ALBStack.Outputs.ALB
        Subnets: !Ref PrivateSubnets
        SecurityGroup: !GetAtt SGStack.Outputs.BackendSecurityGroup
        ECRImageRepository: !Ref MLImageRepository
        ResourcesPrefix: !Ref ResourcesPrefix
        TaskExecutionRoleARN: !GetAtt RoleStack.Outputs.TaskExecutionRoleARN
        ECSCluster: !GetAtt ECSStack.Outputs.ECSCluster
        TargetGroupHealthCheckPath: !Ref TargetGroupHealthCheckPath
        RDSInstanceEndpoint: !GetAtt RDSStack.Outputs.RDSInstanceEndpoint
        RDSInstancePort: !GetAtt RDSStack.Outputs.RDSInstancePort
        DBName: !GetAtt RDSStack.Outputs.DBName
        DBSecretArn: !GetAtt RDSStack.Outputs.SecretArn
        ALBDNSName: !GetAtt ALBStack.Outputs.ALBDNSName
        CloudWatchLogGroupName: !GetAtt CloudWatchLogGroupStack.Outputs.CloudWatchLogGroupName
        BaseTemplateURLParameter: !Ref BaseTemplateURLParameter
        DesiredCount: !Ref DesiredCount
        TargetGroupName: !Ref MLTargetGroupName
        ContainerPort: !Ref MLContainerPort
        ServiceName: !Ref MLServiceName
        ContainerName: !Ref MLContainerName
        TaskCpu: !Ref MLTaskCpu
        TaskMemory: !Ref MLTaskMemory
  HealthCheckStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: EndPointStack
    Properties:
      TemplateURL: !Sub "${BaseTemplateURLParameter}.s3.${AWS::Region}.amazonaws.com/services/healthcheck/eventbridge.yaml"
      Parameters:
        Subnets: !Ref PrivateSubnets
        SecurityGroup: !GetAtt SGStack.Outputs.BackendSecurityGroup
        ECSCluster: !GetAtt ECSStack.Outputs.ECSCluster
        TaskExecutionRoleARN: !GetAtt RoleStack.Outputs.TaskExecutionRoleARN
        EventBridgeRoleArn: !GetAtt RoleStack.Outputs.EventBridgeRoleArn
        CloudWatchLogGroupName: !GetAtt CloudWatchLogGroupStack.Outputs.CloudWatchLogGroupName
        ScheduleExpression: !Ref ScheduleExpression
        ResourcesPrefix: !Ref ResourcesPrefix
        HealthCheckImageRepository: !Ref HealthCheckImageRepository
        TaskCpu: !Ref HealthCheckTaskCpu