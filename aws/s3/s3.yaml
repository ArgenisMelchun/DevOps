AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  BucketName:
    Type: String
    Description: "Name of the S3 bucket to be created"
    
  StackName:
    Type: String
    Default: s3.yaml

  ResourcesPrefix:
    Type: String

  BucketVersioningConfiguration:
    Type: String

  ResourceTags:
    Type: String
    Default: Test

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      LifecycleConfiguration:
        Rules:
          - Id: MoveToIntelligentTiering
            Status: Enabled
            Transitions:
              - StorageClass: INTELLIGENT_TIERING
                TransitionInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: !Ref BucketVersioningConfiguration
      Tags:
          - Key: Name
            Value: !Sub "${ResourcesPrefix}-s3"
          - Key: Stack
            Value: !Ref StackName
  
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: "arn:aws:iam::${AWS::AccountId}:role/*"
            Action: "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${BucketName}"
              - !Sub "arn:aws:s3:::${BucketName}/*"
            Condition:
              StringEquals:
                aws:PrincipalTag/Environment: !Ref ResourceTags

Outputs:
  BucketName:
    Description: "Name of the S3 bucket created"
    Value: !Ref S3Bucket
    Export:
      Name: !Sub "${AWS::StackName}-BucketName"

# ðŸ”¥ TODO: 
  # Add a bucket policy to restrict access to the bucket to a specific IAM role

# Open Questions:
  # Object lock will be enabled?